/*
 * Copyright (c) 2019-present Sonatype, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export interface VulnerabilityDetails {
    identifier: string;
    vulnerabilityLink?: string | null;
    source?: VulnerabilitySource | null;
    mainSeverity?: SeverityScore | null;
    severityScores?: SeverityScore[] | null;
    weakness?: SecurityWeakness | null;
    categories?: string[] | null;
    advisories?: ReferenceLink[] | null;
    rootCauses?: RootCause[] | null;
    description?: string | null;
    explanationMarkdown?: string | null;
    detectionMarkdown?: string | null;
    recommendationMarkdown?: string | null;
    componentExplanationMarkdown?: string | null;
    componentDetectionMarkdown?: string | null;
    componentRecommendationMarkdown?: string | null;
}
export interface VulnerabilitySource {
    longName?: string | null;
    shortName?: string | null;
}
export declare enum SeveritySourceEnum {
    cve_cvss_3 = "CVE CVSS 3",
    cve_cvss_2 = "CVE CVSS 2.0",
    sonatype_cvss_3 = "Sonatype CVSS 3",
    sonatype_cvss_2 = "Sonatype CVSS 2.0"
}
export interface SeverityScore {
    source?: keyof typeof SeveritySourceEnum;
    score: number;
    vector?: string;
}
export interface SecurityWeakness {
    cweSource: string;
    cweIds: CweId[];
}
export interface CweId {
    id: string;
    uri: string;
}
export declare enum ReferenceTypeEnum {
    PROJECT = "Project",
    ATTACK = "Attack",
    THIRD_PARTY = "Third Party",
    EVIDENCE = "Evidence",
    UNKNOWN = "Unknown"
}
export interface ReferenceLink {
    referenceType?: keyof typeof ReferenceTypeEnum | null;
    url?: string | null;
}
export interface RootCause {
    listOfPaths: string[];
    versionRange: string;
}
